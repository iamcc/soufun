// Generated by CoffeeScript 1.6.3
(function() {
  var BufferHelper, City, allCity, async, cheerio, fs, http, iconv, k, keys, loadCity, tasks, _i, _len;

  fs = require('fs');

  http = require('http');

  async = require('async');

  cheerio = require('cheerio');

  iconv = require('iconv-lite');

  BufferHelper = require('bufferhelper');

  keys = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'.split('');

  allCity = [];

  tasks = [];

  loadCity = function(k, cb) {
    return http.get({
      host: 'm.soufun.com',
      path: '/template/city/hotcity.jsp?key=' + k,
      headers: {
        'user-agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/32.0.1700.77 Safari/537.36'
      }
    }, function(res) {
      var bufferHelper;
      bufferHelper = new BufferHelper();
      return bufferHelper.load(res, function(err, buffer) {
        var $;
        $ = cheerio.load(iconv.decode(buffer, 'GBK'));
        $('.ablack').each(function(i, el) {
          var code;
          code = el.attribs.href.replace('/', '').replace('.html', '');
          return allCity.push({
            code: code,
            name: $(el).text()
          });
        });
        cb();
        return console.log('loaded', k);
      });
    });
  };

  for (_i = 0, _len = keys.length; _i < _len; _i++) {
    k = keys[_i];
    tasks.push((function(arg) {
      return function(cb) {
        return loadCity(arg, cb);
      };
    })(k));
  }

  async.auto(tasks, function(err) {
    var i, _j, _results;
    if (err) {
      return console.log(err);
    }
    _results = [];
    for (i = _j = 1; _j <= 10; i = ++_j) {
      _results.push(new City(allCity.pop()).load());
    }
    return _results;
  });

  City = function(opts) {
    this.name = opts.name;
    this.code = opts.code;
    this.page = 1;
    this.opts = {
      host: 'm.soufun.com',
      path: '/xf.d?m=xflist&city=' + this.code + '&datatype=json',
      headers: {
        'User-Agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/32.0.1700.77 Safari/537.36',
        'Content-Type': 'application/x-www-form-urlencoded'
      }
    };
    this.bufferHelper = new BufferHelper();
    return fs.writeFileSync('data/' + this.name + '.xls', '<table>');
  };

  City.prototype.log = function(str) {
    return fs.appendFileSync('data/' + this.name + '.xls', str + '\r\n');
  };

  City.prototype.load = function() {
    var param, req, self;
    self = this;
    param = 'p=' + this.page;
    this.opts.headers['Content-Length'] = param.length;
    this.log('<tr><td>page-' + this.page + '</td></tr>');
    req = http.request(this.opts, function(res) {
      return self.bufferHelper.load(res, function(err, buffer) {
        var $, city, hasData;
        if (err) {
          console.log(err);
          return self.load();
        }
        hasData = false;
        $ = cheerio.load(iconv.decode(buffer, 'GBK'));
        $('.houselist-txt').each(function(i, el) {
          var item, items, tmp, _j, _k, _len1, _len2;
          tmp = '<tr>';
          items = $(el).text().split('\n').filter(function(str) {
            return str.trim();
          });
          for (_j = 0, _len1 = items.length; _j < _len1; _j++) {
            item = items[_j];
            item = item.trim();
          }
          for (_k = 0, _len2 = items.length; _k < _len2; _k++) {
            item = items[_k];
            tmp += "<td>" + (item.trim()) + "</td>";
          }
          tmp += '</tr>';
          self.log(tmp);
          return hasData = true;
        });
        if (hasData) {
          self.page++;
          self.load();
          return console.log('loaded', self.name, self.page);
        } else {
          self.log('</table>');
          city = allCity.pop();
          if (city) {
            new City(city).load();
          }
          return console.log('end', self.name);
        }
      });
    });
    req.write(param);
    return req.end();
  };

}).call(this);
